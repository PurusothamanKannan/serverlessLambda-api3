service: serverlessLamda-api3
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  iam:
     role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:*'
          Resource:
            -  'arn:aws:dynamodb:us-east-1:877969058937:table/*'
 
plugins:
  - serverless-webpack
  # - serverless-vpc-discovery

# custom:
#   dotenv:
#     include: []
#   vpcDiscovery:
#     vpcName: "userApi-VPC-01"
#     subnets:
#       - tagKey: Name
#         tagValues:
#           - "userApi-subnet-01"
#     securityGroups:
#       - names:
#           - "default"

functions:
  getUser:
    handler: src/api/userApi.getUser
    events:
      - http:
          path: /user
          method: get
  addUser:
    handler: src/api/userApi.addUser
    events:
      - http:
          path: /user
          method: POST
  deleteUser:
    handler: src/api/userApi.deleteUser
    events:
      - http:
          path: /urser
          method: delete
  updateUser:
    handler: src/api/userApi.updateUser
    events:
      - http:
          path: /user/{id}
          method: PUT
resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: status
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: status
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    # UserSequencetable:
    #   Type: AWS::DynamoDB::Table
    #   Properties:
    #     TableName: UserSequenceTable
    #     AttributeDefinitions:
    #       - AttributeName: id
    #         AttributeType: S
    #       - AttributeName: userName
    #         AttributeType: S
    #       - AttributeName: sequence_number
    #         AttributeType: N
    #     KeySchema:
    #       - AttributeName: id
    #         KeyType: HASH
    #     BillingMode: PAY_PER_REQUEST
envirnoment:
  ENVIRONMENT:${opt:stage}
  DDB_TABLE:$(opt:TABLE_NAME)


